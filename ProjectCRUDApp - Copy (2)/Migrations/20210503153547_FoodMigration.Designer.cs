// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectCRUDApp.Data;

namespace ProjectCRUDApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210503153547_FoodMigration")]
    partial class FoodMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ProjectAppLibrary.Models.Food", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Cuisine")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PictureURL")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("ProjectAppLibrary.Models.Restaurant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Delivery")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("FoodID")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NameofDish")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PictureURL")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("RecipeID")
                        .HasColumnType("int");

                    b.Property<string>("ratings")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.HasIndex("FoodID");

                    b.HasIndex("RecipeID");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("ProjectAppLibrary.Recipe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ingredients")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("LevelofDifficulty")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PictureURL")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RecipeName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("ProjectAppLibrary.Models.Restaurant", b =>
                {
                    b.HasOne("ProjectAppLibrary.Models.Food", "Food")
                        .WithMany("Restaurants")
                        .HasForeignKey("FoodID");

                    b.HasOne("ProjectAppLibrary.Recipe", "Recipe")
                        .WithMany("Restaurants")
                        .HasForeignKey("RecipeID");

                    b.Navigation("Food");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ProjectAppLibrary.Models.Food", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("ProjectAppLibrary.Recipe", b =>
                {
                    b.Navigation("Restaurants");
                });
#pragma warning restore 612, 618
        }
    }
}
